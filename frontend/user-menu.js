// User Menu Toggle with Language Support and Features

// Translations for 10 Indian Languages
const translations = {
    english: {
        myAccount: 'My Account',
        profile: 'Profile',
        orders: 'My Orders',
        transactions: 'Transaction History',
        language: 'Language',
        logout: 'Logout',
        login: 'Login / Register',
        welcome: 'Welcome'
    },
    hindi: {
        myAccount: '‡§Æ‡•á‡§∞‡§æ ‡§ñ‡§æ‡§§‡§æ',
        profile: '‡§™‡•ç‡§∞‡•ã‡§´‡§º‡§æ‡§á‡§≤',
        orders: '‡§Æ‡•á‡§∞‡•á ‡§ë‡§∞‡•ç‡§°‡§∞',
        transactions: '‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§á‡§§‡§ø‡§π‡§æ‡§∏',
        language: '‡§≠‡§æ‡§∑‡§æ',
        logout: '‡§≤‡•â‡§ó‡§Ü‡§â‡§ü',
        login: '‡§≤‡•â‡§ó‡§ø‡§® / ‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞',
        welcome: '‡§∏‡•ç‡§µ‡§æ‡§ó‡§§'
    },
    bengali: {
        myAccount: '‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü',
        profile: '‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤',
        orders: '‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞',
        transactions: '‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶® ‡¶á‡¶§‡¶ø‡¶π‡¶æ‡¶∏',
        language: '‡¶≠‡¶æ‡¶∑‡¶æ',
        logout: '‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü',
        login: '‡¶≤‡¶ó‡¶á‡¶® / ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞',
        welcome: '‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ'
    },
    telugu: {
        myAccount: '‡∞®‡∞æ ‡∞ñ‡∞æ‡∞§‡∞æ',
        profile: '‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç',
        orders: '‡∞®‡∞æ ‡∞Ü‡∞∞‡±ç‡∞°‡∞∞‡±ç‡∞≤‡±Å',
        transactions: '‡∞≤‡∞æ‡∞µ‡∞æ‡∞¶‡±á‡∞µ‡±Ä ‡∞ö‡∞∞‡∞ø‡∞§‡±ç‡∞∞',
        language: '‡∞≠‡∞æ‡∞∑',
        logout: '‡∞≤‡∞æ‡∞ó‡±å‡∞ü‡±ç',
        login: '‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç / ‡∞®‡∞Æ‡±ã‡∞¶‡±Å',
        welcome: '‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç'
    },
    marathi: {
        myAccount: '‡§Æ‡§æ‡§ù‡•á ‡§ñ‡§æ‡§§‡•á',
        profile: '‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤',
        orders: '‡§Æ‡§æ‡§ù‡•á ‡§ë‡§∞‡•ç‡§°‡§∞',
        transactions: '‡§µ‡•ç‡§Ø‡§µ‡§π‡§æ‡§∞ ‡§á‡§§‡§ø‡§π‡§æ‡§∏',
        language: '‡§≠‡§æ‡§∑‡§æ',
        logout: '‡§≤‡•â‡§ó‡§Ü‡§â‡§ü',
        login: '‡§≤‡•â‡§ó‡§ø‡§® / ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä',
        welcome: '‡§∏‡•ç‡§µ‡§æ‡§ó‡§§'
    },
    tamil: {
        myAccount: '‡Æé‡Æ©‡Æ§‡ØÅ ‡Æï‡Æ£‡Æï‡Øç‡Æï‡ØÅ',
        profile: '‡Æö‡ØÅ‡ÆØ‡Æµ‡Æø‡Æµ‡Æ∞‡ÆÆ‡Øç',
        orders: '‡Æé‡Æ©‡Æ§‡ØÅ ‡ÆÜ‡Æ∞‡Øç‡Æü‡Æ∞‡Øç‡Æï‡Æ≥‡Øç',
        transactions: '‡Æ™‡Æ∞‡Æø‡Æµ‡Æ∞‡Øç‡Æ§‡Øç‡Æ§‡Æ©‡Øà ‡Æµ‡Æ∞‡Æ≤‡Ææ‡Æ±‡ØÅ',
        language: '‡ÆÆ‡Øä‡Æ¥‡Æø',
        logout: '‡Æµ‡ØÜ‡Æ≥‡Æø‡ÆØ‡Øá‡Æ±‡ØÅ',
        login: '‡Æâ‡Æ≥‡Øç‡Æ®‡ØÅ‡Æ¥‡Øà / ‡Æ™‡Æ§‡Æø‡Æµ‡ØÅ',
        welcome: '‡Æµ‡Æ∞‡Æµ‡Øá‡Æ±‡Øç‡Æ™‡ØÅ'
    },
    gujarati: {
        myAccount: '‡™Æ‡™æ‡™∞‡´Å‡™Ç ‡™ñ‡™æ‡™§‡´Å‡™Ç',
        profile: '‡™™‡´ç‡™∞‡´ã‡™´‡™æ‡™á‡™≤',
        orders: '‡™Æ‡™æ‡™∞‡™æ ‡™ì‡™∞‡´ç‡™°‡™∞',
        transactions: '‡™ü‡´ç‡™∞‡™æ‡™®‡´ç‡™ù‡´á‡™ï‡´ç‡™∂‡™® ‡™à‡™§‡™ø‡™π‡™æ‡™∏',
        language: '‡™≠‡™æ‡™∑‡™æ',
        logout: '‡™≤‡´ã‡™ó‡™Ü‡™â‡™ü',
        login: '‡™≤‡´ã‡™ó‡™ø‡™® / ‡™®‡´ã‡™Ç‡™ß‡™£‡´Ä',
        welcome: '‡™∏‡´ç‡™µ‡™æ‡™ó‡™§'
    },
    kannada: {
        myAccount: '‡≤®‡≤®‡≥ç‡≤® ‡≤ñ‡≤æ‡≤§‡≥Ü',
        profile: '‡≤™‡≥ç‡≤∞‡≥ä‡≤´‡≥à‡≤≤‡≥ç',
        orders: '‡≤®‡≤®‡≥ç‡≤® ‡≤Ü‡≤∞‡≥ç‡≤°‡≤∞‡≥ç‚Äå‡≤ó‡≤≥‡≥Å',
        transactions: '‡≤µ‡≤π‡≤ø‡≤µ‡≤æ‡≤ü‡≥Å ‡≤á‡≤§‡≤ø‡≤π‡≤æ‡≤∏',
        language: '‡≤≠‡≤æ‡≤∑‡≥Ü',
        logout: '‡≤≤‡≤æ‡≤ó‡≥ç‡≤î‡≤ü‡≥ç',
        login: '‡≤≤‡≤æ‡≤ó‡≤ø‡≤®‡≥ç / ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø',
        welcome: '‡≤∏‡≥ç‡≤µ‡≤æ‡≤ó‡≤§'
    },
    malayalam: {
        myAccount: '‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥Ö‡¥ï‡µç‡¥ï‡µó‡¥£‡µç‡¥ü‡µç',
        profile: '‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ',
        orders: '‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥ì‡µº‡¥°‡¥±‡µÅ‡¥ï‡µæ',
        transactions: '‡¥á‡¥ü‡¥™‡¥æ‡¥ü‡µç ‡¥ö‡¥∞‡¥ø‡¥§‡µç‡¥∞‡¥Ç',
        language: '‡¥≠‡¥æ‡¥∑',
        logout: '‡¥≤‡µã‡¥ó‡µó‡¥ü‡µç‡¥ü‡µç',
        login: '‡¥≤‡µã‡¥ó‡¥ø‡µª / ‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µº',
        welcome: '‡¥∏‡µç‡¥µ‡¥æ‡¥ó‡¥§‡¥Ç'
    },
    punjabi: {
        myAccount: '‡®Æ‡©á‡®∞‡®æ ‡®ñ‡®æ‡®§‡®æ',
        profile: '‡®™‡©ç‡®∞‡©ã‡®´‡®æ‡®à‡®≤',
        orders: '‡®Æ‡©á‡®∞‡©á ‡®Ü‡®∞‡®°‡®∞',
        transactions: '‡®≤‡©à‡®£-‡®¶‡©á‡®£ ‡®á‡®§‡®ø‡®π‡®æ‡®∏',
        language: '‡®≠‡®æ‡®∏‡®º‡®æ',
        logout: '‡®≤‡®æ‡©±‡®ó‡®Ü‡®ä‡®ü',
        login: '‡®≤‡®æ‡©±‡®ó‡®á‡®® / ‡®∞‡®ú‡®ø‡®∏‡®ü‡®∞',
        welcome: '‡®∏‡©Å‡®Ü‡®ó‡®§ ‡®π‡©à'
    }
};

// Get current language
function getCurrentLanguage() {
    return localStorage.getItem('pharm_language') || 'english';
}

// Set language
function setLanguage(lang) {
    localStorage.setItem('pharm_language', lang);
    updateMenuText();
    window.dispatchEvent(new Event('languageChanged'));
}

// Update menu text based on language
function updateMenuText() {
    const lang = getCurrentLanguage();
    const t = translations[lang];
    
    // Update menu items
    document.querySelectorAll('[data-i18n]').forEach(elem => {
        const key = elem.getAttribute('data-i18n');
        if (t[key]) elem.textContent = t[key];
    });
}

// Create User Menu
function createUserMenu() {
    const lang = getCurrentLanguage();
    const t = translations[lang];
    const userName = localStorage.getItem('user_name');
    const userEmail = localStorage.getItem('user_email');
    const isLoggedIn = userName && userEmail;
    
    const menuHTML = `
        <div class="user-menu-backdrop" id="userMenuBackdrop" onclick="closeUserMenu()"></div>
        <div class="user-menu-panel" id="userMenuPanel">
            <div class="user-menu-header">
                ${isLoggedIn ? `
                    <div class="user-avatar">
                        <span>${userName.charAt(0).toUpperCase()}</span>
                    </div>
                    <div class="user-info">
                        <h3>${userName}</h3>
                        <p>${userEmail}</p>
                    </div>
                ` : `
                    <div class="user-avatar">
                        <span>üë§</span>
                    </div>
                    <div class="user-info">
                        <h3 data-i18n="welcome">${t.welcome}</h3>
                        <p data-i18n="login">${t.login}</p>
                    </div>
                `}
            </div>
            
            ${isLoggedIn ? `
                <div class="menu-section">
                    <a href="profile.html" class="menu-item">
                        <span class="menu-icon">üë§</span>
                        <span data-i18n="profile">${t.profile}</span>
                    </a>
                    <a href="my-orders.html" class="menu-item">
                        <span class="menu-icon">üì¶</span>
                        <span data-i18n="orders">${t.orders}</span>
                    </a>
                    <a href="transaction-history.html" class="menu-item">
                        <span class="menu-icon">üí≥</span>
                        <span data-i18n="transactions">${t.transactions}</span>
                    </a>
                </div>
            ` : `
                <div class="menu-section">
                    <a href="login.html" class="menu-item">
                        <span class="menu-icon">üîê</span>
                        <span data-i18n="login">${t.login}</span>
                    </a>
                </div>
            `}
            
            <div class="menu-section">
                <div class="menu-item" onclick="toggleLanguageMenu()">
                    <span class="menu-icon">üåê</span>
                    <span data-i18n="language">${t.language}</span>
                    <span class="menu-arrow">‚Ä∫</span>
                </div>
                
                <div class="language-submenu" id="languageSubmenu">
                    <div class="language-option" onclick="selectLanguage('english')">English</div>
                    <div class="language-option" onclick="selectLanguage('hindi')">‡§π‡§ø‡§Ç‡§¶‡•Ä (Hindi)</div>
                    <div class="language-option" onclick="selectLanguage('bengali')">‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ (Bengali)</div>
                    <div class="language-option" onclick="selectLanguage('telugu')">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å (Telugu)</div>
                    <div class="language-option" onclick="selectLanguage('marathi')">‡§Æ‡§∞‡§æ‡§†‡•Ä (Marathi)</div>
                    <div class="language-option" onclick="selectLanguage('tamil')">‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç (Tamil)</div>
                    <div class="language-option" onclick="selectLanguage('gujarati')">‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä (Gujarati)</div>
                    <div class="language-option" onclick="selectLanguage('kannada')">‡≤ï‡≤®‡≥ç‡≤®‡≤° (Kannada)</div>
                    <div class="language-option" onclick="selectLanguage('malayalam')">‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç (Malayalam)</div>
                    <div class="language-option" onclick="selectLanguage('punjabi')">‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä (Punjabi)</div>
                </div>
            </div>
            
            ${isLoggedIn ? `
                <div class="menu-section">
                    <a href="#" class="menu-item logout-item" onclick="logoutUser()">
                        <span class="menu-icon">üö™</span>
                        <span data-i18n="logout">${t.logout}</span>
                    </a>
                </div>
            ` : ''}
        </div>
    `;
    
    // Remove existing menu
    const existing = document.getElementById('userMenuContainer');
    if (existing) existing.remove();
    
    // Add new menu
    const container = document.createElement('div');
    container.id = 'userMenuContainer';
    container.innerHTML = menuHTML;
    document.body.appendChild(container);
}

// Toggle User Menu
function toggleUserMenu() {
    const backdrop = document.getElementById('userMenuBackdrop');
    const panel = document.getElementById('userMenuPanel');
    
    if (!backdrop || !panel) {
        createUserMenu();
        setTimeout(toggleUserMenu, 10);
        return;
    }
    
    const isOpen = backdrop.classList.contains('active');
    
    if (isOpen) {
        closeUserMenu();
    } else {
        backdrop.classList.add('active');
        panel.classList.add('active');
    }
}

// Close User Menu
function closeUserMenu() {
    const backdrop = document.getElementById('userMenuBackdrop');
    const panel = document.getElementById('userMenuPanel');
    if (backdrop) backdrop.classList.remove('active');
    if (panel) panel.classList.remove('active');
}

// Toggle Language Menu
function toggleLanguageMenu() {
    const submenu = document.getElementById('languageSubmenu');
    if (submenu) {
        submenu.classList.toggle('active');
    }
}

// Select Language
function selectLanguage(lang) {
    setLanguage(lang);
    closeUserMenu();
    // Reload to apply language
    setTimeout(() => window.location.reload(), 300);
}

// Logout User
async function logoutUser() {
    try {
        await fetch('/api/user/logout', {
            method: 'POST',
            credentials: 'same-origin'
        });
    } catch (err) {
        console.error('Logout error:', err);
    }
    
    localStorage.removeItem('user_name');
    localStorage.removeItem('user_email');
    localStorage.removeItem('user_id');
    
    closeUserMenu();
    window.location.href = '/index.html';
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    createUserMenu();
    updateMenuText();
});
